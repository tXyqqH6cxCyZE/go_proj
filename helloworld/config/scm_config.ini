;基础配置
[xbase]
config_type=local #local or etcd
config_addr=http://etcd.test.mi.com #配置中心地址
;项目所在的小组名,一定要配置，不配置将会panic，详情请参见mis.n.mi.com
group=
;项目的服务名，一定要配置，不配置将会panic，详情请参见mis.n.mi.com 
service=

;应用配置,当config_type为etcd时，以下的所有配置需要在soa平台上进行配置
[server]
port=12508
admin_port=12509
;是否开启ip权限控制，建议在测试环境关闭，线上环境开启
ip_auth=0    
;是否开启接口级的权限控制，建议在测试环境关闭，线上环境开启
method_auth=0
auth=test_Xvq2enx1+BKyz18BpHBYvncNP6/mX+hqhNfSONjMfq8=

[log]
; Debug, Trace, Notice, Warn, Fatal, 建议测试采用debug级别，上线采用Notice级别
log_level=Debug 
log_path =./logs
;IO_data = 1 # 1 表示所有接口输入输出内容都进行打印,0表示接口输入输出都不打印, 默认为0, 结果输出到 notice

;开发环境建议开启: output=file|console，生产环境建议开启: output=file
output=file|console     
;
;[apiIOLog]
;seek=1   # 0 表示输入输出都不打印, 1 表示打印输入参数, 2 表示打印输出参数, 3 表示输入输出都打印,优先级高于 IO_data

;是否启用rpc模块，启用了可以直接通过rpc模块调用后端服务
[rpc]
enable=0

;[hook]
;after_load_config_timeout[int]=10  hook中AfterLoadConfig方法超时时间， 默认30s

[stat]
stat_interval=5
stat_addr=http://mis.n.mi.com/api/monitor/push 

[register]
;本机房ectd集群
local_register=http://etcd.test.mi.com  
;注册中心
register_center:                         
-http://etcd.test.mi.com
;跨机房etcd集群，当提供跨机房服务时，需要配置跨机房的etcd集群列表
;cross_register:                           
;-http://etcd.test.mi.com

;以下配置mysql相关信息，通过程序自动代码生成即可初始化mysql连接池
;这个过程不需要用户编写任何代码。用户通过 app.Global().MysqlExample
;即可引用mysql_Example实例
;多个mysql数据库，配置多个mysql节即可，例如：
;[mysql_cart]
;r...
;...
;[mysql_order]
;...
;...
;引用的时候，分别通过app.Global().MysqlCart和
;app.Global().MysqlOrder即可
;[mysql_example]
;host=127.0.0.1
;port[int]=3306           #使用[int]指定port的类型为int
;user=root
;passwd=root
;database=test
;conn_timeout[int]=2000
;read_timeout[int]=2000
;write_timeout[int]=2000
;Charset=utf8
;max_idle_conn[int]=64
;max_open_conn[int]=8192

;以下配置redis相关信息，通过程序自动代码生成即可初始化redis实例
;这个过程不需要用户编写任何代码。用户通过 app.Global().RedisExample
;即可引用redis连接池
;[redis_example]
;host=127.0.0.1
;port[int]=6379
;auth=
;conn_timeout[int]=1000
;read_timeout[int]=1000
;write_timeout[int]=1000
;max_open_conn[int]=8192

;以下配置rabbitmq相关信息，通过程序自动代码生成即可初始化xmq生产者实例
;这个过程不需要用户编写任何代码。用户通过 app.Global().RabbitmqExample
;即可引用rabbitmq连接池
;[rabbitmq_example]
;host=127.0.0.1
;port[int]=6379
;user=guest
;passwd=guest
;vhost=/
;exchange=test
;exchange_type=direct
;max_open_conn[int]=8192
;conn_timeout[int]=1000
;read_timeout[int]=1000
;write_timeout[int]=1000

;以下配置nsq生产者相关信息，注意nsq_producer_ 为前缀。
;通过app.Global().NsqProducerEg 引用。可指定多个topic。
;[nsq_producer_eg]
;auth=test_secret
;pool_size[int]=5
;pub_timeout[int]=10
;topic:
;-test
;-test2
;lookups:
;-http://localhost:4161
;-http://localhost:4171

;以下配置nsq消费者相关信息，注意nsq_consumer_ 为前缀。 通过app.Global().NsqConsumerEg 引用。
;[nsq_consumer_eg]
;topic=test
;channel=test
;auth=test_secret
;ordered=true
;extend=true
; ;read_timeout需要大于nsq 的心跳时间：30s,防止没有消息的时候链接被断开。
;read_timeout[int]=120
;max_in_flight[int]=30
;lookups:
;-http://localhost:4161
;-http://localhost:4171